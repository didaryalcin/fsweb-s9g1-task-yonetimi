{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddryl\\\\Desktop\\\\workintech\\\\9.hafta\\\\fsweb-s9g1-task-yonetimi\\\\src\\\\TaskHookForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskHookForm = _ref => {\n  _s();\n  let {\n    kisiler,\n    submitFn\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      mode: \"onChange\",\n      id: nanoid(5),\n      // unique bir id oluşturduk\n      title: \"\",\n      description: \"\",\n      people: []\n    }\n  });\n  const onSubmit = (data, a) => {\n    submitFn({\n      ...data,\n      status: \"yapılacak\"\n    });\n    a.target.reset();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"taskForm\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"title\",\n        children: \"Ba\\u015Fl\\u0131k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-text\",\n        id: \"title\",\n        name: \"title\",\n        type: \"text\",\n        ...register(\"title\", {\n          required: \"Task başlığı yazmalısınız\",\n          min: {\n            value: 3,\n            message: \"Task başlığı en az 3 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.title.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"description\",\n        children: \"A\\xE7\\u0131klama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-textarea\",\n        rows: \"3\",\n        id: \"description\",\n        name: \"description\",\n        ...register(\"description\", {\n          required: \"Task açıklaması yazmalısınız\",\n          min: {\n            value: 10,\n            message: \"Task açıklaması en az 10 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), errors.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.description.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"\\u0130nsanlar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: kisiler.map(p => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"people\",\n            value: p,\n            ...register(\"people\", {\n              validate: {\n                lessThanTen: x => x.length >= 1 || \"Lütfen en az bir kişi seçin\",\n                lessThanThree: y => y.length <= 3 || \"En fazla 3 kişi seçebilirsiniz\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), p]\n        }, p, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), errors.people && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.people.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        children: \"Kaydet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskHookForm, \"RcUlyA4GEHKh2CRkv6V7TGIZ2pY=\", false, function () {\n  return [useForm];\n});\n_c = TaskHookForm;\nexport default TaskHookForm;\nvar _c;\n$RefreshReg$(_c, \"TaskHookForm\");","map":{"version":3,"names":["React","useForm","nanoid","TaskHookForm","kisiler","submitFn","register","handleSubmit","formState","errors","defaultValues","mode","id","title","description","people","onSubmit","data","a","status","target","reset","required","min","value","message","map","p","validate","lessThanTen","x","length","lessThanThree","y"],"sources":["C:/Users/ddryl/Desktop/workintech/9.hafta/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js"],"sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst TaskHookForm = ({ kisiler, submitFn }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      mode: \"onChange\",\r\n      id: nanoid(5), // unique bir id oluşturduk\r\n      title: \"\",\r\n      description: \"\",\r\n      people: [],\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data, a) => {\r\n    submitFn({\r\n      ...data,\r\n      status: \"yapılacak\",\r\n    });\r\n    a.target.reset();\r\n  };\r\n\r\n  return (\r\n    <form className=\"taskForm\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"title\">\r\n          Başlık\r\n        </label>\r\n        <input\r\n          className=\"input-text\"\r\n          id=\"title\"\r\n          name=\"title\"\r\n          type=\"text\"\r\n          {...register(\"title\", {\r\n            required: \"Task başlığı yazmalısınız\",\r\n            min: { value: 3, message: \"Task başlığı en az 3 karakter olmalı\" },\r\n          })}\r\n        />\r\n        {errors.title && <p className=\"input-error\">{errors.title.message}</p>}\r\n      </div>\r\n\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"description\">\r\n          Açıklama\r\n        </label>\r\n        <textarea\r\n          className=\"input-textarea\"\r\n          rows=\"3\"\r\n          id=\"description\"\r\n          name=\"description\"\r\n          {...register(\"description\", {\r\n            required: \"Task açıklaması yazmalısınız\",\r\n            min: {\r\n              value: 10,\r\n              message: \"Task açıklaması en az 10 karakter olmalı\",\r\n            },\r\n          })}\r\n        ></textarea>\r\n        {errors.description && (\r\n          <p className=\"input-error\">{errors.description.message}</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\">İnsanlar</label>\r\n        <div>\r\n          {kisiler.map((p) => (\r\n            <label className=\"input-checkbox\" key={p}>\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"people\"\r\n                value={p}\r\n                {...register(\"people\", {\r\n                  validate: {\r\n                    lessThanTen: (x) =>\r\n                      x.length >= 1 || \"Lütfen en az bir kişi seçin\",\r\n                    lessThanThree: (y) =>\r\n                      y.length <= 3 || \"En fazla 3 kişi seçebilirsiniz\",\r\n                  },\r\n                })}\r\n              />\r\n              {p}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        {errors.people && (\r\n          <p className=\"input-error\">{errors.people.message}</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"form-line\">\r\n        <button className=\"submit-button\" type=\"submit\">\r\n          Kaydet\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskHookForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}